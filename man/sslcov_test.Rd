% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sslcov_test.R
\name{sslcov_test}
\alias{sslcov_test}
\title{Wrapper function for testing TODO}
\usage{
sslcov_test(y, x, index_sup, surrogate, adjust_covariates,
  sampling_weights = rep(1/length(y), length(index_sup)), nperturb = 500,
  do_interact = TRUE, condi = FALSE)
}
\arguments{
\item{y}{vector of length \code{N} of the outcome}

\item{x}{vector of length \code{N} containing the covariate of interest}

\item{index_sup}{vector of length \code{n} indicating which observations whave supervised info}

\item{surrogate}{matrix with \code{N} rows containing the surrogate information}

\item{adjust_covariates}{optional matrix with \code{N} rows containing covariates to adjust on in
the semi-supervised estimation}

\item{sampling_weights}{optional vector of length \code{n} containing the weights with which the
\code{n} supervised observation were sampled from the population. Default is random sampling.}

\item{nperturb}{The number of perturbations to be run. Default is \code{500}.}

\item{do_interact}{logical flag indicating whether interactins between \code{x} and
covariates should be taken into account when imputing \code{y}. Default is \code{TRUE}.}

\item{condi}{logical flag indicating whether the covariance estimated should be condition on the
covariates indicated in . Default is \code{TRUE}.}
}
\description{
Wrapper function for testing TODO
}
\examples{
\dontrun{
#rm(list=ls())
nn_divide <- 50
NN <- 2000
nn <- NN/nn_divide
mySigma <- matrix(rep(0.3,16),4,4) + 0.7*diag(4)
beta <- 5 #0.6
set.seed(1234)
data_sim <- sim_data(ntot = NN, Sigma = mySigma, b_G = beta)
es <- extremeSampling(data_sim, nn=nn, surrogate_name=c("S1", "S2", "S3"))
data_sampled <- rbind(data_sim[es$extreme_index,], data_sim[-es$extreme_index,])
res_ssl <- ssl_test(y = data_sim[,"Y"], x = log(data_sim[,"G"] + 1), index_sup = 1:nn,
                   surrogate = data_sim[,c("S1", "S2", "S3")],
                   adjust_covariates = data_sim[,"X", drop=FALSE],
                   sampling_weights = es$weights,
                   do_interact=FALSE, condi = FALSE)
res_ssl_now <- ssl_test(y = data_sim[,"Y"], x = log(data_sim[,"G"] + 1), index_sup = 1:nn,
                       surrogate = data_sim[,c("S1", "S2", "S3")],
                       adjust_covariates = data_sim[,"X", drop=FALSE],
                       do_interact=FALSE, condi = FALSE)

#library(profvis)
#profvis(
res_ssl_condi <- ssl_test(y = data_sim[,"Y"], x = data_sim[,"G"], index_sup = 1:nn,
                         surrogate = data_sim[,c("S1", "S2", "S3")],
                         adjust_covariates = data_sim[,"X", drop=FALSE],
                         sampling_weights = es$weights,
                         do_interact=FALSE, condi = TRUE)
#)
res_ssl_now_condi <- ssl_test(y = data_sim[,"Y"], x = data_sim[,"G"], index_sup = 1:nn,
                             surrogate = data_sim[,c("S1", "S2", "S3")],
                             adjust_covariates = data_sim[,"X", drop=FALSE],
                             do_interact=FALSE, condi = TRUE)
}

}
